@using Cinema_System.Areas.Admin.Controllers
@model IEnumerable<Room>

@{
    ViewData["Title"] = "Room Management";
    int cinemaId = (int)ViewData["CinemaId"];
    // Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid mt-4">
    <!-- Tiêu đề bảng + nút Add -->
    <div class="card shadow-sm">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h3 class="card-title mb-0 text-center fw-bold">Room Management</h3>
            <button id="addRoomBtn" class="btn btn-primary">Add</button>
        </div>

        <div class="card-body">
            <!-- Bảng Rooms -->
            <div class="table-responsive">
                <table id="tblData" class="table table-bordered table-hover table-striped">
                    <thead class="thead-light">
                        <tr>
                            <th style="width: 15%;">Room Number</th>
                            <th style="width: 30%;">Cinema</th>
                            <th style="width: 20%;">Capacity</th>
                            <th class="text-center" style="width: 35%;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var room in Model)
                        {
                            <tr>
                                <td data-id="@room.RoomID" data-field="RoomNumber">@room.RoomNumber</td>
                                <td data-id="@room.RoomID" data-field="Cinema">@cinemaId</td>
                                <td data-id="@room.RoomID" data-field="Capacity">@room.Capacity</td>
                                
                                <td class="text-center">
                                    <div class="d-flex gap-2 justify-content-center">
                                        @if (room.Status.ToString() == "Available")
                                        {
                                            <button onclick="lockRoom('@room.RoomID', this)"
                                                    class="btn btn-danger btn-sm rounded-3 text-uppercase fw-semibold">
                                                <i class="bi bi-lock-fill me-1"></i>LOCK
                                            </button>
                                        }
                                        else
                                        {
                                            <button onclick="unlockRoom('@room.RoomID', this)"
                                                    class="btn btn-success btn-sm rounded-3 text-uppercase fw-semibold">
                                                <i class="bi bi-unlock-fill me-1"></i>UNLOCK
                                            </button>
                                        }
                                        @* @if (user.Role != "Guest") *@
                                        @* { *@
                                            <button onclick="enableEdit(this)"
                                                    class="btn btn-primary btn-sm rounded-3 text-uppercase fw-semibold">
                                                <i class="bi bi-pencil-square me-1"></i>Edit
                                            </button>
                                        @* } *@
                                        @* else *@
                                        @* { *@
                                            @* <button class="btn btn-primary btn-sm rounded-3 text-uppercase fw-semibold disabled opacity-50"> *@
                                            @*     <i class="bi bi-pencil-square me-1"></i>Edit *@
                                            @* </button> *@
                                        @* } *@
                                    </div>
                                </td>
                            </tr>
                        }
                        @* Nếu chưa có dữ liệu *@
                        @if (!Model.Any())
                        {
                            <tr>
                                <td colspan="5" class="text-center">No rooms found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

    </div>
    <!-- Room Form -->
    
    <div class="card shadow-sm">
        <div id="room-form" class="p-0 d-none">
            <div class="card-header bg-primary text-white text-center">
                <h4 class="mb-0">Add new room</h4>
            </div>
            <div class="card-body">
                <form id="createRoomForm">
                    <div class="mb-3">
                        <label class="form-label">Room Number</label>
                        <input type="text" class="form-control" id="roomNumber" placeholder="Enter Room Number" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Capacity</label>
                        <input type="number" class="form-control" id="roomCapacity" placeholder="Enter Capacity" required>
                    </div>
                    <button type="submit" class="btn btn-secondary w-100">Submit</button>
                </form>
            </div>
        </div>
      
    </div>
</div>
@section Scripts {
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function() {
            $('#tblData').DataTable({
                "pageLength": 10,
                "lengthMenu": [5, 10, 25, 50],
                "searching": true,
                "ordering": true,
                "info": true
            });
            
            // Inline editing
            $('#tblData').on('blur', 'td[contenteditable="true"]', function() {
                var id = $(this).data('id');
                var field = $(this).data('field');
                var value = $(this).text();

                if (!value.trim()) {
                    toastr.error('Field cannot be empty.');
                    return;
                }

                $.ajax({
                    url: '/Admin/Rooms/UpdateRoomField',
                    type: 'POST',
                    data: {
                        id: id,
                        field: field,
                        value: value,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function(xhr) {
                        var errorMessage = xhr.responseJSON && xhr.responseJSON.message ? xhr.responseJSON.message : 'An error occurred while processing your request.';
                        toastr.error(errorMessage);
                    }
                });
            });

            $('#addRoomBtn').click(function() {
                $('#room-form').toggleClass('d-none');
            });

            var cinemaId = @cinemaId;
            // Handle form submission
            $('#createRoomForm').submit(function(e) {
                e.preventDefault();

                var roomNumber = $('#roomNumber').val();
                var roomCapacity = $('#roomCapacity').val();

                if (!roomNumber.trim() || !roomCapacity.trim() || !cinemaId.trim()) {
                    toastr.error('All fields are required.');
                    return;
                }

                if (!/^\d+$/.test(roomCapacity) || roomCapacity <= 0) {
                    toastr.error('Capacity must be a positive number.');
                    return;
                }

                $.ajax({
                    url: '/Admin/Rooms/Create',
                    type: 'POST',
                    data: {
                        RoomNumber: roomNumber,
                        Capacity: roomCapacity,
                        CinemaId: cinemaId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            location.reload();
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function(xhr) {
                        var errorMessage = xhr.responseJSON && xhr.responseJSON.message ? xhr.responseJSON.message : 'An error occurred while processing your request.';
                        toastr.error(errorMessage);
                    }
                });
            });
        });

        function enableEdit(button) {
            var row = $(button).closest('tr');
            row.find('td[data-field]').attr('contenteditable', 'true').addClass('editable');
            $(button).html('<i class="bi bi-check-circle-fill me-1"></i>Save').attr('onclick', 'saveEdit(this)');
        }

        function saveEdit(button) {
            var row = $(button).closest('tr');
            row.find('td[data-field]').removeAttr('contenteditable').removeClass('editable');
            $(button).html('<i class="bi bi-pencil-square me-1"></i>Edit').attr('onclick', 'enableEdit(this)');
        }
        // chua fix
        function lockUser(userId, button) {
            if (confirm('Are you sure you want to lock this user?')) {
                $.ajax({
                    url: '/Admin/Users/Lock/' + userId,
                    type: 'POST',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            $(button).removeClass('btn-danger').addClass('btn-success').html('<i class="bi bi-unlock-fill me-1"></i>UNLOCK').attr('onclick', 'unlockUser(\'' + userId + '\', this)');
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function(xhr) {
                        var errorMessage = xhr.responseJSON && xhr.responseJSON.message ? xhr.responseJSON.message : 'An error occurred while processing your request.';
                        toastr.error(errorMessage);
                    }
                });
            }
        }

        function unlockUser(userId, button) {
            if (confirm('Are you sure you want to unlock this user?')) {
                $.ajax({
                    url: '/Admin/Users/Unlock/' + userId,
                    type: 'POST',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            $(button).removeClass('btn-success').addClass('btn-danger').html('<i class="bi bi-lock-fill me-1"></i>LOCK').attr('onclick', 'lockUser(\'' + userId + '\', this)');
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function(xhr) {
                        var errorMessage = xhr.responseJSON && xhr.responseJSON.message ? xhr.responseJSON.message : 'An error occurred while processing your request.';
                        toastr.error(errorMessage);
                    }
                });
            }
        }
    </script>
}
@Html.AntiForgeryToken()